plugins {
    id 'java'
}

group 'eu.tsalliance'
version '1.0'
def mainClassName = "eu.tsalliance.streamer.Core"

repositories {
    mavenCentral()
}

compileJava {
    targetCompatibility = JavaVersion.VERSION_11
    sourceCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // Add lombok to project for getters and setters
    implementation 'org.projectlombok:lombok:1.18.16'
    annotationProcessor 'org.projectlombok:lombok:1.18.16'

    // Add mysql client connector to access database
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'

    // Add json simple for reading json config files and gson for object to json conversion
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'

    // Add logback for logging
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

    // Add to lookup mp3 tags
    implementation "com.mpatric:mp3agic:0.9.1"

    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

    implementation 'io.socket:socket.io-client:2.0.0'

    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.12'

}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes('Main-Class': mainClassName)
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
